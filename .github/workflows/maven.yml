# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
permissions:
  contents: write
env:
  AZURE_CLIENT_ID: '939d4d90-44bf-4d8b-9088-32f1c779a788'
  AZURE_APP_NAME: 'CodeAcademyTestJava'
  AZURE_RESOURCE_GROUP: 'TEST_DEV'
  AZURE_LOCATION: 'norwayeast'
  AZURE_CLIENT_SECRET: $AZURE_CLIENT_SECRET
  AZURE_TENANT_ID: '8b87af7d-8647-4dc7-8df4-5f69a2011bb5'
jobs:
  build:
    name: Package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'oracle'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@4f64ddab9d742a4806eeb588d238e4c311a8397d

  azure-login:
    name: Login to Azure Container Registry
    runs-on: ubuntu-latest
    steps:
      - name: Azure CLI script
        uses: azure/CLI@v2
        with:
          azcliversion: 2.1.0
          inlineScript: |
            echo $AZURE_SERVICE_PRINCIPAL
            az login --service-principal -u $AZURE_CLIENT_ID -p ${{secrets.AZURE_CLIENT_SECRET}} --tenant $AZURE_TENANT_ID
            az account set --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: $AZURE_APP_NAME
          slot-name: production
          package: .
          publish-profile: ${{secrets.AZURE_WEBAPP_PUBLISH_PROFILE}}

#  publish:
#    name: Publish til azure
#    runs-on: ubuntu-latest
#    steps:
#      - uses: azure/docker-login@v2
#      - name: Deploy it
#        shell: pwsh
#        run: |
#          az login --service-principal -u $AZURE_CLIENT_ID -p ${{secrets.AZURE_CLIENT_SECRET}} --tenant $AZURE_TENANT_ID
#          az account set --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}}
#          mvn azure-webapp:deploy
#          az webapp up --name $AZURE_APP_NAME --resource-group $AZURE_RESOURCE_GROUP --location $AZURE_LOCATION --sku B1 --runtime 'java:17:Java SE:17'